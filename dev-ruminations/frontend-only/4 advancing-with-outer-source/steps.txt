Алгоритм создания для сложных многостраничных сайтов. Только фронтэнд.

1. Создаём index.html, в нём будет весь HTML главной страницы.
2. Стили задаём посредством CSS в отдельном файле index.css, подключаем его тэгом <link>.
3. Поведение задаём посредством JavaScript в отдельном файле index.js, подключаем его посредством тэга <script>

4. Другие странички делаются аналогично, но их файлы называются соответственно page_name.html, page_name.css и page_name.js и лежат рядом с index-файлами главной страницы.
4-A. Файлы страниц можно сортировать: создав папку Styles или CSS сложить в неё все файлы стилей, создав папку Scripts или JS сложить в неё все файлы JavaScript, можно даже для самих страниц создать папку Pages или HTML и переложить файлы page_name.html в неё. Разумеется, ссылки, подключающие файлы, должны быть с учётом пути в папки.
4-Б. Файлы страниц можно соответственно группировать в подпапки в папке проекта, где каждая папка будет называться page_name, а файлы в ней могут именоваться как предложено выше или даже традиционно index.html, style.css и script.js.

5. Стили общие для всех страниц выносятся в файл common.css, который подключается на всех страницах. Кроме него на кадой странице как и прежде может также быть подключён файл со стилями специфичными для страницы. common.css лежит в корневой папке проекта или в случае из 4-А в папке Styles или CSS.
6. Переменные, функции и т.п. общие для всех страниц выносятся в файл common.js, который подключается на всех страницах. Кроме него на каждой странице как и прежжде может также быть подключён скрипт-файл с функциями специфичными для страницы. common.js лежит в корневой папке проекта или в случае из 4-А в папке Scripts или JS.

7. Модули, библиотеки и компоненты неспецифичные для этого конкретного проекта но в нём используемые предлагается держать в папке Separable или metaSRС и подключать аналогично общим файлам.
8. Если это файлы более чем одного типа и/или они являются частями модулей/библиотек/компонентов, состоящих из более чем одного файла, то их стоит дополнительно сортировать в подпапки по типам или именам компонентов, желательно аналогично тому, как это сделано с общими файлами.

9. Опубликовать такой проект можно на любом файловом сервере-хостинге. Например прямо на github.com посредством функций GitPages.
