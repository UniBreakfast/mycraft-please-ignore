Принципы модульности:

1. Программа, которую не получается начать и закончить условно "в один присест" (за один-два сеанса разработки) должна быть модульной.
2. Модульность подразумевает разделение программы на модули / сборку программы из модулей.
3. Модуль - это подпрограмма, выполняющая задачи, которые можно выделить в самостоятельный блок, хотя бы теоретически применимый не только в этой программе.
4. "чёрный ящик" (коробка) - принцип, согласно которому модуль является "непрозрачным" для программы и других модулей, его данные и логика поведения не "вытекают" наружу никак, кроме непосредственно возвращаемых предусмотренными интерфейсами значений. И сам он не воспринимает извне ничто, непосредственно в него не передававшееся.
5. Модули могут быть простыми и составными - состоящими из подмодулей.
6. Простой модуль должен быть слишком мелким. Функция на пару строчек - это, скорее всего, неоправданно мелкая модульность ради модульности, кроме случая, когда этот модуль создан специально для упрощённого замещения на позиции другого - более сложного.
7. Но не должен простой модуль и быть слишком большим. Однако это крайне субъективный момент оценки, и тут я могу лишь повториться формулировками из пункта 1. лишь использовав вместо слова "программа" слово "модуль".
8. Составной модуль, в идеале, не должен содержать логики помимо загрузки и сборки рабочей сущности ("машины", "механизма") из загружаемых модулей и экспорта результата.
9. Точка входа в программу (стартовый файл) - это, по сути, составной модуль, не обязанный что-либо экспортировать.
