Алгоритм создания для малых серверов с данными в памяти. Только бэкэнд.

1. Создаём index.js, в нём будет стартовый код, импортирующий/подключающий модули.
2. Первые кандидаты на вынесение в отдельные файлы-модули это: сервер (например на основе модуля http), функция-обработчик запросов, роутер (например если он в виде объекта или функции), функции обработки отдельных роутов, различные функции для вычислений, классы, исходные структуры данных.
3. Функция-обработчик запросов может дифференциировать запросы по свойствам .url и .method, что позволяет реализовать роутинг посредством "if / else if / else if / else", конструкции switch или даже объекта, где ключами будут url-ы (методы могут к ним конкатенироваться или быть ключами вложенных объектов).
4. Один роут (обычно '/') отдаёт html-разметку страницы по принципу "all inclusive", и если/когда понадобятся стили, то и CSS в тэге <style>, а если/когда понадобится поведение, то и JS в тэге <script>.
5. Остальные роуты отдают / принимают данные, загружая из / сохраняя в оперативной памяти.
6. Здесь всё ещё не предполагается работа с диском или использование сторонних модулей.

7. Опубликовать такой проект можно на любом сервере-хостинге, поддерживающем NodeJS. Например на render.com.
